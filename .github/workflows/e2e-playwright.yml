name: e2e-playwright

on:
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/e2e-playwright.yml'
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/e2e-playwright.yml'

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKER_DEFAULT_PLATFORM: linux/amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Docker info
        run: |
          docker --version
          docker compose version
          docker info

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Start backend stack (docker compose)
        env:
          # Backend settings for CI (disable Cognito to avoid external deps)
          COGNITO_ENABLED: "false"
          DOCKER_DEFAULT_PLATFORM: linux/amd64
        run: |
          docker compose up -d postgres redis minio
          # wait for minio-setup to complete
          docker compose up -d minio-setup
          docker compose up -d backend
          echo "Waiting for backend to be ready..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8080 >/dev/null 2>&1 || curl -fsS http://localhost:8080/health >/dev/null 2>&1; then
              echo "Backend is up"; break; fi; sleep 2; done
          # Show containers
          docker compose ps

      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: frontend
        env:
          # CI環境では認証情報がない場合、スモークはスキップされます
          NEXT_PUBLIC_API_HOST: http://localhost:8080
          NEXT_PUBLIC_API_VERSION: v1
          E2E_EMAIL: ${{ secrets.E2E_EMAIL }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
        run: npx playwright test --reporter=line,html

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: ignore
