-- 提案情報関連テーブルの存在確認スクリプト -- 1. データベース選択 USE monstera;
-- 2. テーブル存在確認 SELECT 'Checking tables existence...' AS status;
SELECT TABLE_NAME, TABLE_COMMENT, CREATE_TIME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'monstera' AND TABLE_NAME IN ('proposals', 'proposal_questions') ORDER BY TABLE_NAME;
-- 3. proposalsテーブルの構造確認 SELECT '--- Proposals table structure ---' AS status;
SHOW CREATE TABLE proposals;
-- 4. proposal_questionsテーブルの構造確認 SELECT '--- Proposal questions table structure ---' AS status;
SHOW CREATE TABLE proposal_questions;
-- 5. カラム詳細確認 SELECT '--- Column details for proposals ---' AS status;
SELECT COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, COLUMN_COMMENT FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'monstera' AND TABLE_NAME = 'proposals' ORDER BY ORDINAL_POSITION;
SELECT '--- Column details for proposal_questions ---' AS status;
SELECT COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, COLUMN_COMMENT FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'monstera' AND TABLE_NAME = 'proposal_questions' ORDER BY ORDINAL_POSITION;
-- 6. インデックス確認 SELECT '--- Indexes for proposals ---' AS status;
SHOW INDEX FROM proposals;
SELECT '--- Indexes for proposal_questions ---' AS status;
SHOW INDEX FROM proposal_questions;
-- 7. 外部キー制約確認 SELECT '--- Foreign key constraints ---' AS status;
SELECT tc.CONSTRAINT_NAME, tc.TABLE_NAME, kcu.COLUMN_NAME, kcu.REFERENCED_TABLE_NAME, kcu.REFERENCED_COLUMN_NAME, rc.UPDATE_RULE, rc.DELETE_RULE FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu ON tc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME AND tc.TABLE_SCHEMA = kcu.TABLE_SCHEMA JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc ON tc.CONSTRAINT_NAME = rc.CONSTRAINT_NAME AND tc.TABLE_SCHEMA = rc.CONSTRAINT_SCHEMA WHERE tc.CONSTRAINT_TYPE = 'FOREIGN KEY' AND tc.TABLE_SCHEMA = 'monstera' AND tc.TABLE_NAME IN ('proposals', 'proposal_questions');
-- 8. monstera_poc.projectsテーブルの存在確認 SELECT '--- Cross-database reference check ---' AS status;
SELECT CASE WHEN COUNT(*) > 0 THEN 'monstera_poc.projects table EXISTS' ELSE 'WARNING: monstera_poc.projects table NOT FOUND' END AS cross_db_status FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'monstera_poc' AND TABLE_NAME = 'projects';
-- 9. マイグレーション履歴確認 SELECT '--- Migration history ---' AS status;
-- schema_migrationsテーブルが存在する場合の確認 SELECT version, dirty FROM schema_migrations WHERE version IN (200040, 200041) ORDER BY version;
-- 10. データ件数確認 SELECT '--- Current data count ---' AS status;
SELECT 'proposals' AS table_name, COUNT(*) AS record_count, COUNT(CASE WHEN deleted_at IS NULL THEN 1 END) AS active_count, COUNT(CASE WHEN deleted_at IS NOT NULL THEN 1 END) AS deleted_count FROM proposals UNION ALL SELECT 'proposal_questions' AS table_name, COUNT(*) AS record_count, COUNT(CASE WHEN deleted_at IS NULL THEN 1 END) AS active_count, COUNT(CASE WHEN deleted_at IS NOT NULL THEN 1 END) AS deleted_count FROM proposal_questions;
-- 11. ステータス分布確認 SELECT '--- Proposal status distribution ---' AS status;
SELECT status, COUNT(*) AS count FROM proposals WHERE deleted_at IS NULL GROUP BY status;
-- 12. 最終確認サマリー SELECT '--- Final check summary ---' AS status;
SELECT CASE WHEN ( SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'monstera' AND TABLE_NAME = 'proposals' ) > 0 AND ( SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'monstera' AND TABLE_NAME = 'proposal_questions' ) > 0 THEN '✅ All proposal tables are properly created' ELSE '❌ Some proposal tables are missing' END AS migration_status;
