# =============================================================================
# Monstera プロジェクト .gitignore
# =============================================================================

# =============================================================================
# 環境変数・設定ファイル
# =============================================================================
.env
.env.local
.env.development
.env.staging
.env.production
.env.*.local
.env.cognito

# =============================================================================
# ログファイル
# =============================================================================
*.log
logs/
tmp/
*.tmp

# =============================================================================
# フロントエンド (Next.js)
# =============================================================================
# Next.js ビルドファイル
frontend/.next/
frontend/out/

# 依存関係
frontend/node_modules/

# テストカバレッジ
frontend/coverage/

# TypeScript
frontend/*.tsbuildinfo
frontend/next-env.d.ts

# ESLintキャッシュ
frontend/.eslintcache

# Turbopack（将来的な使用に備えて）
frontend/.turbo/

# =============================================================================
# バックエンド (Go)
# =============================================================================
# バイナリファイル
backend/main
backend/server
backend/app
backend/tmp/
backend/bin/

# Goビルド成果物
*.test
*.bench
*.prof
*.out

# Go モジュールキャッシュ
backend/go.sum.bak

# Goベンダリング（将来的に使用する場合）
vendor/

# =============================================================================
# データベース
# =============================================================================
# ローカルデータベースファイル
*.db
*.sqlite
*.sqlite3

# データベースダンプ
*.sql.gz
*.sql.bak

# PostgreSQLデータ
postgres_data/
pgdata/

# Redisダンプファイル
dump.rdb

# =============================================================================
# Docker
# =============================================================================
# Docker ボリューム データ（既に docker-compose.yml で定義済み）
# ただし、ローカルでデータディレクトリを作成した場合の除外
# ルートレベルのdataディレクトリのみを除外（frontend/src/data/は含まない）
/data/
mysql_data/

# =============================================================================
# IDE・エディタ
# =============================================================================
# Visual Studio Code
.vscode/
!.vscode/settings.json.example

# IntelliJ IDEA
.idea/

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc

# =============================================================================
# OS
# =============================================================================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# =============================================================================
# 証明書・鍵ファイル
# =============================================================================
*.pem
*.key
*.cert
*.crt
*.p12
*.pfx

# =============================================================================
# 一時ファイル・バックアップ
# =============================================================================
*.bak
*.backup
*.tmp
*.temp
.backup/

# マージコンフリクト
*.orig

# デバッグファイル
*.pprof
debug.test

# =============================================================================
# 本番環境・デプロイ関連
# =============================================================================
dist/
build/
uploads/
storage/

# =============================================================================
# テスト関連
# =============================================================================
# テストカバレッジ
coverage/
*.cover
*.coverage

# =============================================================================
# パッケージマネージャ
# =============================================================================
# npm
package-lock.json.bak

# Yarn
yarn.lock.bak

# pnpm（将来的な使用に備えて）
pnpm-lock.yaml

# Yarn Berry
.yarn/*
!.yarn/releases
!.yarn/plugins
.pnp.*

# Go modules
go.work
go.work.sum

# =============================================================================
# 開発用一時ファイル
# =============================================================================
# 一時的なメモファイル
TODO.md
NOTES.md
scratch.md

# バックアップファイル（特定の拡張子）
*.tsx.backup
*.go.backup
*.sql.backup

# =============================================================================
# プロジェクト固有
# =============================================================================
# レポート・アーカイブファイル
reports/
archives/

# ユーザーアップロードファイル（テスト用）
uploads/test/
uploads/temp/

# =============================================================================
# セキュリティ関連
# =============================================================================
# セキュリティスキャン結果
security-scan.json
vulnerability-report.json

# API キー・シークレット（念のため）
secrets.json
credentials.json
api-keys.json

# =============================================================================
# プライベートリポジトリ向け最適化
# =============================================================================
# 開発者固有の設定ファイル（チーム内でも共有しない）
.personal/
personal.config
*.personal.*

# ローカル開発用の設定オーバーライド
config.local.json
settings.local.json

# 監視・モニタリングツール（将来的な使用に備えて）
.grafana/
.prometheus/
monitoring/data/

# プロジェクト固有のスクリプト（開発者個人用）
scripts/local/
scripts/personal/

# 開発メモ・スクラッチファイル（より包括的に）
*.scratch.*
*-scratch.*
scratch/
drafts/
wip/